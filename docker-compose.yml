version: "3.9"

services:

# docker-compose.yml
  mongo:
    image: mongo:6
    container_name: edulit-mongo-auth
    restart: always
    ports:
      - "27017:27017"
    networks:
      - edulit-network

  postgres:
    image: postgres:16-alpine
    container_name: edulit-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - edulit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    container_name: edulit-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - edulit-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s

  postgres_lesson:
    image: postgres:17.6-alpine
    container_name: edulit-postgres-lesson
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lesson_db
    ports:
      - "5433:5432"
    volumes:
      - pgdata_lesson:/var/lib/postgresql/data
    networks:
      - edulit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lesson_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  mysql_assessment:
    image: mysql:5.7.43
    container_name: edulit-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: edulit_assessment_db
      MYSQL_USER: developer
      MYSQL_PASSWORD: devpass
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - edulit-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgres_question:
    image: postgres:17.6-alpine
    container_name: edulit-postgres-question
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: question_db
    ports:
      - "5434:5432"
    volumes:
      - pgdata_question:/var/lib/postgresql/data
    networks:
      - edulit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d question_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: AuthService.Api/Dockerfile
    container_name: edulit-auth-service
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:     
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=auth_db;Username=postgres;Password=postgres"
      Mongo__ConnectionString: "mongodb://mongo:27017"
      Mongo__Database: "auth_read"
      RabbitMq__HostName: "rabbitmq"  
      RabbitMq__Port: "5672"
      RabbitMq__UserName: "guest"
      RabbitMq__Password: "guest"
      Jwt__Key: "THIS_IS_A_MUCH_LONGER_AND_MORE_SECURE_SUPER_SECRET_KEY_123456789"
      Jwt__Issuer: "EduLit.Auth"
      Jwt__Audience: "EduLit.Users"
      Jwt__ExpiresInHours: "48"
    ports:
      - "8001:8080"
    networks:
      - edulit-network

  auth-service-query:
    build:
      context: ./services/auth-service-query
      dockerfile: AuthServiceQuery/Dockerfile
    container_name: edulit-auth-query-service
    restart: on-failure
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__MongoDb: "mongodb://mongo:27017"
      ConnectionStrings__RabbitMq: "amqp://guest:guest@rabbitmq:5672/"
      Mongo__Database: "auth_query"
      RabbitMq__HostName: "rabbitmq"
      RabbitMq__Port: "5672"
      RabbitMq__UserName: "guest"
      RabbitMq__Password: "guest"
      RabbitMq__VirtualHost: "/"
      Jwt__Key: "THIS_IS_A_MUCH_LONGER_AND_MORE_SECURE_SUPER_SECRET_KEY_123456789"
      Jwt__Issuer: "EduLit.Auth"
      Jwt__Audience: "EduLit.Users"
      Jwt__ExpiresInHours: "48"
    ports:
      - "8005:8080"
    networks:
      - edulit-network

  lesson-service:
    build:
      context: ./services/lesson-service
      dockerfile: LessonService.Api/Dockerfile
    container_name: edulit-lesson-service
    restart: on-failure
    depends_on:
      postgres_lesson:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres_lesson;Port=5432;Database=lesson_db;Username=postgres;Password=postgres;TrustServerCertificate=True"
      ConnectionStrings__Redis: "redis-13508.c334.asia-southeast2-1.gce.redns.redis-cloud.com:13508,user=default,password=sS62t215atZzf6U7BQ8Lhbex592AJA1g"
      JwtSettings__SecretKey: "THIS_IS_A_MUCH_LONGER_AND_MORE_SECURE_SUPER_SECRET_KEY_123456789"
      JwtSettings__Issuer: "EduLit.Auth"
      JwtSettings__Audience: "EduLit.Users"
      JwtSettings__ExpiresInHours: "48"
    ports:
      - "8002:8080"
    networks:
      - edulit-network
    entrypoint: >
      /bin/sh -c "
      until pg_isready -h postgres_lesson -p 5432 -U postgres;
      do echo 'Waiting for PostgreSQL...'; sleep 2; done;
      echo 'PostgreSQL is ready!';
      dotnet LessonService.Api.dll
      "
      
  question-service:
    build:
      context: ./services/question-service
      dockerfile: QuestionService.Api/Dockerfile
    container_name: edulit-question-service
    restart: on-failure
    depends_on:
      postgres_question:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres_question;Port=5432;Database=question_db;Username=postgres;Password=postgres;TrustServerCertificate=True"
      JwtSettings__SecretKey: "THIS_IS_A_MUCH_LONGER_AND_MORE_SECURE_SUPER_SECRET_KEY_123456789"
      JwtSettings__Issuer: "EduLit.Auth"
      JwtSettings__Audience: "EduLit.Users"
      JwtSettings__ExpiresInHours: "48"
    ports:
      - "8003:8080"
    networks:
      - edulit-network
    entrypoint: >
      /bin/sh -c "
      until pg_isready -h postgres_question -p 5432 -U postgres;
      do echo 'Waiting for PostgreSQL...'; sleep 2; done;
      echo 'PostgreSQL is ready!';
      dotnet QuestionService.Api.dll
      "

  assessment-service:
    build:
      context: ./services/assessment-service
      dockerfile: AssessmentService.Api/Dockerfile
    container_name: edulit-assessment-service
    restart: on-failure
    depends_on:
      mysql_assessment:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__MySqlConnection: "server=mysql_assessment;port=3306;database=edulit_assessment_db;user=developer;password=devpass;SslMode=None;Connect Timeout=30;"
      JwtSettings__SecretKey: "THIS_IS_A_MUCH_LONGER_AND_MORE_SECURE_SUPER_SECRET_KEY_123456789"
      JwtSettings__Issuer: "EduLit.Auth"
      JwtSettings__Audience: "EduLit.Users"
      JwtSettings__ExpiresInHours: "48"
    ports:
      - "8004:8080"
    networks:
      - edulit-network
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MySQL to be ready...';
      until mysqladmin ping -h mysql_assessment -u developer -pdevpass --silent; do
        echo 'MySQL not ready, waiting...'; 
        sleep 3;
      done;
      echo 'MySQL is ready!';
      sleep 3;
      echo 'Starting Assessment Service...';
      dotnet AssessmentService.Api.dll
      "

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: edulit-api-gateway
    restart: on-failure
    depends_on:
      - auth-service
    ports:
      - "8000:8080"
    networks:
      - edulit-network

volumes:
  pgdata:
  pgdata_lesson:
  pgdata_question:
  mysqldata:
  rabbitmq_data:

networks:
  edulit-network:
    driver: bridge
